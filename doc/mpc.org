#+title: CarND-MPC-Project project
#+author: Michael Krasnyk
#+html_link_home:
#+html_head: <link rel="stylesheet" type="text/css" href="http://www.star.bris.ac.uk/bjm/css/bjm.css" />
#+html_link_up:
#+html_mathjax:
#+latex_header: \usepackage{fullpage}

* Kinematic Model

State vector of the model
\[
x,y,\psi,v
\]
where $x$ and $y$ are the coordinates of the vehicle in local coordinate,
$\psi$ is the orientation of the car, $v$ is the velocity.

Vehicle model has two actuators
\[
\delta, a
\]
with $\delta$ a steering angle and $a$ an acceleration (throttle/brake combined).

Model difference equation:
\[
\begin{array}{rcl}
x_{t+1}&=&\displaystyle x_t+v_t \cos(\psi_t) dt\\
y_{t+1}&=&\displaystyle y_t+v_t \sin(\psi_t) dt\\
\psi_{t+1}&=&\displaystyle \psi_t+\frac{v_t}{L_f} \delta_t dt\\
v_{t+1}&=&\displaystyle v_t+a_t dt
\end{array}
\]

* Kinematic model with errors (from lecture)

The state of the model
\[
x,y,\psi,v,cte,e\psi
\]
is extended with $cte$ — the cross-track error and $e\psi$ — the orientation error.

** Cross Track Error

The error between the center of the road and the vehicle's position is the cross track error:
\[
cte_{t+1}=cte_t + v_t \sin(e\psi_t) dt
\]

In this case $cte_t$ can be expressed as the difference between the reference line and the
current vehicle position $y$. Assuming the reference line is a polynomial $f(x)$:
\[
cte_t=f(x_t)-y_t
\]

If we substitute $cte_t$ back into the original equation the result is:
\[
cte_{t+1}=f(x_t)-y_t + v_t \sin(e\psi_t) dt
\]

This can be broken up into two parts:
- $f(x_t)-y_t$ being the current cross track error
- $v_t \sin(e\psi_t) dt$ being the change in error caused by the vehicle's movement

** Orientation Error

The orientation error:
\[
e\psi_{t+1}=e\psi_t+ \frac{v_t}{L_f} \delta_t dt
\]
The update rule is essentially the same as $\psi$.

$e\psi_t$ is the desired orientation subtracted from the current orientation:
\[
e\psi_t=\psi_t−\psi{des}_{t}
\]
where $\psi{des}_t$ (desired $\psi$) and can be calculated as the tangential
angle of the polynomial $f(x)$ evaluated at $x_t$, as $\arctan(f'(x_t))$
with $f'$ is the derivative of the polynomial.
\[
e\psi_{t+1}=\psi_t-\psi{des}_t + \frac{v_t}{L_f} \delta_t dt
\]
Similarly to the cross track error this can be interpreted as two parts:
- $\psi_t-\psi{des}_t$ being the current orientation error
- $\frac{v_t}{L_f} \delta_t dt$ being the change in error caused by the vehicle's movement

* Model implementation
The vehicle model is implemented in https://github.com/udacity/CarND-MPC-Quizzes/blob/master/mpc_to_line/solution/MPC.cpp

Number of forward steps is $N = \{20, 40\}$, the time step $dt = 0.05$. The velocity reference value is $v_{\text{ref}}=\{20, 32\}$ m/s.
The model implements the cost function
\[
C = \left[\sum_{i=0}^N w_{cte} cte_i^2 + w_{e\psi} e\psi_i^2 + w_v (v_i-v_{\text{ref}})^2\right]  + \left[ \sum_{i=0}^{N-1} w_{\delta} \delta_i^2 + w_a a_i^2 \right] + \left[ \sum_{i=0}^{N-2} w_{\delta'}(\delta_{i+1}-\delta_i)^2 + w_{a'}(a_{i+1}-a_{i})^2 \right]
\]
with different weight values $w_{.}$ and difference equations at $N$ time points as optimization equality constraints.
The optimizer is IPOPT with CppAD symbolic differentiation procedure.
The state variables are unbounded, steering angles $\delta$ lies in range [-25, 25] degrees,
acceleration values are in range [-1,1] or [-1,0.25] depending on the road complexity.

The actuator values $\delta$ and $a$ are linearly interpolated at the time point $t_{\text{now}}+0.1$ seconds
to compensate the controller 100 milliseconds latency.

* One step calculation of the reference track

** Received step data
#+begin_src R :session first_step :file images/pts.png :results output graphics :exports both
ptsx <- c(-32.161729999999999, -43.491729999999997, -61.090000000000003, -78.291719999999998, -93.050020000000004, -107.7717)
ptsy <- c(113.361, 105.941, 92.884990000000002, 78.731020000000001, 65.34102, 50.57938)

px <- -40.619999999999997
py <- 108.73
psi <- 3.7336510000000001
v <- 0.43800909999999998

plot(ptsx, ptsy, 'b')
arrows(px, py, px + 10 * cos(psi), py + 10 * sin(psi), col='red')
#+end_src

#+results:
[[file:images/pts.png]]
** Transformed points to the local vehicle's reference systems
#+begin_src R :session first_step :file images/val.png :results output graphics :exports both
xy <- mapply(function(x, y) c(x*cos(psi) + y*sin(psi), -x*sin(psi) + y*cos(psi)), x = ptsx - px, y = ptsy - py)
print (xy)
plot(xy[1,], xy[2,], 'b', ylim=c(-1, 12))
arrows(0, 0, 10, 0, col='red')
#+end_src

#+results:
[[file:images/val.png]]

#+begin_src R :session first_step :results output :exports both
paste(c("X: ", xy[1,]) ,collapse=' ')
paste(c("Y: ", xy[2,]) ,collapse=' ')
#+end_src

#+results:
: [1] "X:  -9.60304259089076 3.93940137227534 25.8285057832489 48.0012942525802 67.7201992157065 88.1741885507836"
: [1] "Y:  0.877533697608325 0.71166777432672 1.724392909049 3.8695011146151 6.7442717046266 10.7776571055713"

** Fitting a cubic polynomial

#+begin_src R :session first_step :results output :exports both
coeffs <- lm(formula = xy[2,] ~ xy[1,] + I(xy[1,]^2) + I(xy[1,]^3))
print(coeffs)
track <- function(x) coef(coeffs)[1] + coef(coeffs)[2] * x + coef(coeffs)[3] * x^2 + coef(coeffs)[4] * x^3
#+end_src

#+results:
:
: Call:
: lm(formula = xy[2, ] ~ xy[1, ] + I(xy[1, ]^2) + I(xy[1, ]^3))
:
: Coefficients:
:  (Intercept)       xy[1, ]  I(xy[1, ]^2)  I(xy[1, ]^3)
:    7.443e-01     2.145e-03     1.351e-03    -9.852e-07

#+begin_src R :session first_step :file images/poly.png :results output graphics :exports both
plot(xy[1,], xy[2,], 'b', ylim=c(-1, 12))
xx <- seq(min(xy[1,]), max(xy[1,]), length=50)
lines(xx, lapply(xx, track), type="l", col="red")
arrows(0, 0, 10, 0, col='red')
#+end_src

#+results:
[[file:images/poly.png]]


* Simulation results

** First try with $v_{\text{ref}}=20$ m/s and $V_{\text{max}}=26.3$ mph

In the first both activation values and changes in activation values are penalized with weight values 100, so
the cost function is
\[
C = \left[\sum_{i=0}^N cte_i^2 + e\psi_i^2 + (v_i-v_{\text{ref}})^2\right]  + 100 \left[ \sum_{i=0}^{N-1} \delta_i^2 + a_i^2 \right] + 100 \left[ \sum_{i=0}^{N-2} (\delta_{i+1}-\delta_i)^2 + (a_{i+1}-a_{i})^2 \right]
\]


The track results is
#+begin_src gnuplot :exports both :file images/first_track.png
reset
set terminal png size 1600,1000
set title "Track"
set xlabel "x"
set xlabel "y"
plot 'data/first.data' using ($1):($2) with lines lw 5 title 'Road', \
     'data/first.data' using 1:2:($4*cos($3)):($4*sin($3)) with vectors head filled lt 2 title 'Velocity'
#+end_src



Vehicle's speed is settled at $\approx 26.3$ mph.
#+begin_src gnuplot :exports both :file images/first_speed.png
reset
set terminal png size 640,480
set title "Speed"
set xlabel "Step"
set yrange [0:52]
set ytics 0,10,52
plot 'data/first.data' using 0:($4*3600/1609.34) with lines title 'V, mph', \
     44.75 with lines title 'ref_v, mph'
#+end_src

#+results:
[[file:images/first_speed.png]]

and the cost function at $\approx 1300$
#+begin_src gnuplot :exports both :file images/first_cost.png
reset
set terminal png size 640,480
set title "Cost"
set xlabel "Step"
set yrange [0:8000]
set ytics 0,2000,8000
plot 'data/first.data' using 0:($5) with lines title 'Cost'
#+end_src

#+results:
[[file:images/first_cost.png]]

so acceleration value $a$ is almost constant at $0.225$
#+begin_src gnuplot :exports both :file images/first_actuators.png
reset
set terminal png size 640,480
set title "Actuators"
set xlabel "Step"
set yrange [-1:1]
set ytics -1,0.5,1
plot 'data/first.data' using 0:($6) with lines title 'delta', \
     'data/first.data' using 0:($7) with lines title 'a'
#+end_src

#+results:
[[file:images/actuators1.png]]

[[https://raw.githubusercontent.com/oxidase/CarND-MPC-Project/master/doc/video/first.mp4][Link to video file]]
#+HTML:<p><center><video width="640" height="480" controls><source src="https://raw.githubusercontent.com/oxidase/CarND-MPC-Project/master/doc/video/first.mp4" type="video/mp4">Your browser does not support the video tag.</video></center><p>

** Second try with $v_{\text{ref}}=20$ m/s and average speed 45 mph

In this try change in the acceleration is not penalized but change of the steering angle is penalized at most,
also error in the velocity is penalized less than the cross-track error and the error in $\psi$,  so
the cost function is
\[
C = \left[\sum_{i=0}^N cte_i^2 + e\psi_i^2 + 10^{-1}(v_i-v_{\text{ref}})^2\right]  + \left[ \sum_{i=0}^{N-1} 1000 \delta_i^2 + 50 a_i^2 \right] + 50000 \sum_{i=0}^{N-2} (\delta_{i+1}-\delta_i)^2
\]

The track result
#+begin_src gnuplot :exports both :file images/second_track.png
reset
set terminal png size 1600,1000
set title "Track"
set xlabel "x"
set xlabel "y"
plot 'data/second.data' using ($1):($2) with lines lw 5 title 'Road', \
     'data/second.data' using 1:2:($4*cos($3)):($4*sin($3)) with vectors head filled lt 2 title 'Velocity'
#+end_src

#+results:
[[file:images/second_track.png]]


Vehicle's speed oscillates near the reference value $\approx 45$ mph:
#+begin_src gnuplot :exports both :file images/second_speed.png
reset
set terminal png size 640,480
set title "Speed"
set xlabel "Step"
set yrange [0:60]
set ytics 0,5,60
plot 'data/second.data' using 0:($4*3600/1609.34) with lines title 'V, mph', \
     44.75 with lines title 'ref_v, mph'
#+end_src

#+results:
[[file:images/second_speed.png]]

The cost function goes down and has multiple maxima at turns
#+begin_src gnuplot :exports both :file images/second_cost.png
reset
set terminal png size 640,480
set title "Cost"
set xlabel "Step"
set yrange [0:1500]
set ytics 0,500,1500
plot 'data/second.data' using 0:($5) with lines title 'Cost'
#+end_src

#+results:
[[file:images/second_cost.png]]

Acceleration value $a$ shows a bang-bang controller behavior
#+begin_src gnuplot :exports both :file images/second_actuators.png
reset
set terminal png size 640,480
set title "Actuators"
set xlabel "Step"
set yrange [-2:2]
set ytics -1,0.5,1
plot 'data/second.data' using 0:($6) with lines title 'delta', \
     'data/second.data' using 0:($7) with lines title 'a'
#+end_src

#+results:
[[file:images/second_actuators.png]]

[[https://raw.githubusercontent.com/oxidase/CarND-MPC-Project/master/doc/video/second.mp4][Link to video file]]

#+HTML:<p><center><video width="640" height="480" controls><source src="https://raw.githubusercontent.com/oxidase/CarND-MPC-Project/master/doc/video/second.mp4" type="video/mp4">Your browser does not support the video tag.</video></center><p>


** Third try with $v_{\text{ref}}=32$ m/s and top speed $72$ mph

In this try change in the acceleration is not penalized but change of the steering angle is penalized at most,
so the cost function is
\[
C = \left[\sum_{i=0}^N cte_i^2 + e\psi_i^2 + 10^{-1}(v_i-v_{\text{ref}})^2\right]  + \left[ \sum_{i=0}^{N-1} 100 \delta_i^2 + 5 a_i^2 \right] + 5000000 \sum_{i=0}^{N-2} (\delta_{i+1}-\delta_i)^2
\]

Also to prevent acceleration in turns the positive acceleration constraint is
set to 0.25 if the tracks has S-shape turns in the time horizon.

The track result
#+begin_src gnuplot :exports both :file images/third_track.png
reset
set terminal png size 1600,1000
set title "Track"
set xlabel "x"
set xlabel "y"
plot 'data/third.data' using ($1):($2) with lines lw 5 title 'Road', \
     'data/third.data' using 1:2:($4*cos($3)):($4*sin($3)) with vectors head filled lt 2 title 'Velocity'
#+end_src

#+results:
[[file:images/third_track.png]]


Vehicle's speed oscillates below the reference value $\approx 72$ mph:
#+begin_src gnuplot :exports both :file images/third_speed.png
reset
set terminal png size 640,480
set title "Speed"
set xlabel "Step"
set yrange [0:80]
set ytics 0,10,80
plot 'data/third.data' using 0:($4*3600/1609.34) with lines title 'V, mph', \
     71.58 with lines title 'ref_v, mph'
#+end_src

#+results:
[[file:images/third_speed.png]]

The cost function goes down and has multiple maxima at turns
#+begin_src gnuplot :exports both :file images/third_cost.png
reset
set terminal png size 640,480
set title "Cost"
set xlabel "Step"
set yrange [0:4000]
set ytics 0,500,4000
plot 'data/third.data' using 0:($5) with lines title 'Cost'
#+end_src

#+results:
[[file:images/third_cost.png]]

Acceleration value $a$ shows a bang-bang controller behavior
with 0.25 constraint near complex turns, so instead of
acceleration-breaking cycles as in the second try
the vehicle performs fast-slow acceleration cycles with sporadic short breaking.

#+begin_src gnuplot :exports both :file images/third_actuators.png
reset
set terminal png size 640,480
set title "Actuators"
set xlabel "Step"
set yrange [-2:2]
set ytics -1,0.5,1
plot 'data/third.data' using 0:($6) with lines title 'delta', \
     'data/third.data' using 0:($7) with lines title 'a'
#+end_src

#+results:
[[file:images/third_actuators.png]]

[[https://raw.githubusercontent.com/oxidase/CarND-MPC-Project/master/doc/video/third.mp4][Link to video file]]

#+HTML:<p><center><video width="640" height="480" controls><source src="https://raw.githubusercontent.com/oxidase/CarND-MPC-Project/master/doc/video/third.mp4" type="video/mp4">Your browser does not support the video tag.</video></center><p>


** Fourth try with maximal speed 112 mph

Another possibility is to control the reference velocity by the curvature of the
road segment in the time horizon.

The curvature for the fitted cubic polynomial $\kappa(x)$ is be computed as

#+name: curvpoly
#+HEADER: :exports none
#+begin_src maxima :results raw
f(x) := c[3]*x^3+c[2]*x^2+c[1]*x+c[0];
d1(x) := at(diff(f(z),z), [z=x]);
d2(x) := at(diff(d1(z),z), [z=x]);
k(x) := d2(x) / (1 + d1(x)^2)^(3/2);
tex(k(x));
#+end_src

#+results: curvpoly
$${{6\,c_{3}\,x+2\,c_{2}}\over{\left(\left(3\,c_{3}\,x^2+2\,c_{2}\,x+
 c_{1}\right)^2+1\right)^{{{3}\over{2}}}}}$$



Curvature $\kappa(x)$ for the first step
#+name: Curvature for the first step
#+begin_src maxima :exports results :file images/curv.png :results graphics
programmode: false;
f(x) := c[3]*x^3+c[2]*x^2+c[1]*x+c[0];
d1(x) := at(diff(f(z),z), [z=x]);
d2(x) := at(diff(d1(z),z), [z=x]);
k(x) := d2(x) / (1 + d1(x)^2)^(3/2);
plot2d(at(k(x), [c[0]=7.443e-01, c[1]=2.145e-03, c[2]=1.351e-03, c[3]=-9.852e-07]), [x, -10, 89])$
#+end_src

#+results: Curvature for the first step
[[file:images/curv.png]]

The reference velocity is computed by the logistic function
with the average squared curvature as the argument
\[
\bar{\kappa} = \frac{1}{x_{\max} - x_{\min}} \int_{x_{\min}}^{x_{\max}} \kappa(x)^2 dx
\]

and
\[
\text{ref}_v = 50 - \frac{30}{1+\exp\{-5\cdot 10^4 \left(\bar{\kappa}-1.2\cdot 10^{-4}\right)\}}
\]
with 50 m/s (112 mph) maximal speed and 20 m/s (45 mph) speed in turns.
Parameters $-5\cdot 10^4$ and $1.2\cdot {10^4}$ represent turning style:
- $1.2\cdot {10^4}$ activation average quadratic curvature to reduce speed
- $-5\cdot 10^4$ steepness of the speed reduction

#+name: Reference velocity
#+begin_src gnuplot :exports both :file images/ref_v.png
reset
set terminal png size 640,480
set title "Reference velocity"
set xlabel "k\342\200\276"
plot [0:4e-4] (50 - 30 / (1 + exp(-.5e5*(x-1.2e-4)))) title 'ref_v, [m/s]'
#+end_src

#+results: Reference velocity
[[file:images/ref_v.png]]


The track result
#+begin_src gnuplot :exports both :file images/fourth_track.png
reset
set terminal png size 1600,1000
set title "Track"
set xlabel "x"
set xlabel "y"
plot 'data/fourth.data' using ($1):($2) with lines lw 5 title 'Road', \
     'data/fourth.data' using 1:2:($4*cos($3)):($4*sin($3)) with vectors head filled lt 2 title 'Velocity'
#+end_src

#+results:
[[file:images/fourth_track.png]]


Vehicle's speed oscillates between 40 and 100 mph
with acceleration on straight road segments and fast speed reduction in turns
#+begin_src gnuplot :exports both :file images/fourth_speed.png
reset
set terminal png size 640,480
set title "Speed"
set xlabel "Step"
set yrange [0:130]
set ytics 0,20,130
plot 'data/fourth.data' using 0:($4*3600/1609.34) with lines title 'V, mph', \
     'data/fourth.data' using 0:($8*3600/1609.34) with lines title 'ref_v, mph',
#+end_src

#+results:
[[file:images/fourth_speed.png]]

The cost function
#+begin_src gnuplot :exports both :file images/fourth_cost.png
reset
set terminal png size 640,480
set title "Cost"
set xlabel "Step"
set yrange [0:8000]
set ytics 0,1000,8000
plot 'data/fourth.data' using 0:($5) with lines title 'Cost'
#+end_src

#+results:
[[file:images/fourth_cost.png]]

Acceleration value $a$ shows a bang-bang controller behavior
as in the second try, but now acceleration segments are larger
with shorter breaking segments.

#+begin_src gnuplot :exports both :file images/fourth_actuators.png
reset
set terminal png size 640,480
set title "Actuators"
set xlabel "Step"
set yrange [-2:2]
set ytics -1,0.5,1
plot 'data/fourth.data' using 0:($6) with lines title 'delta', \
     'data/fourth.data' using 0:($7) with lines title 'a'
#+end_src

#+results:
[[file:images/fourth_actuators.png]]

[[https://raw.githubusercontent.com/oxidase/CarND-MPC-Project/master/doc/video/fourth.mp4][Link to video file]]

#+HTML:<p><center><video width="640" height="480" controls><source src="https://raw.githubusercontent.com/oxidase/CarND-MPC-Project/master/doc/video/fourth.mp4" type="video/mp4">Your browser does not support the video tag.</video></center><p>


* Summary

With help of different sets of weight values $w_{.}$ and reference values it is possible to make different driving styles:

- very safe driving by penalizing acceleration
- driving with constant average speed with 0 acceleration change penalty and high penalty for steering angle changes
- driving with high speed by increasing reference velocity and adjusting upper bounds for acceleration that prevents
  acceleration in turns
- setting reference velocity based on the map or predicted horizon values results in race-like driving
  and possible to achieve speed of 100 mph for
\[
\text{ref}_v = 54 - \frac{28}{1+\exp\{-10^5 \left(\bar{\kappa}-1.2\cdot 10^{-4}\right)\}}
\]

#+HTML:<p><center><video width="640" height="480" controls><source src="https://raw.githubusercontent.com/oxidase/CarND-MPC-Project/master/doc/video/fifth.mp4" type="video/mp4">Your browser does not support the video tag.</video></center><p>
